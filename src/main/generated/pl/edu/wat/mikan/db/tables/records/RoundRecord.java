/*
 * This file is generated by jOOQ.
 */
package pl.edu.wat.mikan.db.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import pl.edu.wat.mikan.db.tables.Round;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoundRecord extends UpdatableRecordImpl<RoundRecord> implements Record3<Integer, Integer, Long> {

    private static final long serialVersionUID = -901502126;

    /**
     * Setter for <code>Players.round.pla1_id</code>.
     */
    public void setPla1Id(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Players.round.pla1_id</code>.
     */
    public Integer getPla1Id() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Players.round.pla2_id</code>.
     */
    public void setPla2Id(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Players.round.pla2_id</code>.
     */
    public Integer getPla2Id() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Players.round.rou_id</code>.
     */
    public void setRouId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>Players.round.rou_id</code>.
     */
    public Long getRouId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<Integer, Integer, Long> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Round.ROUND.PLA1_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Round.ROUND.PLA2_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Round.ROUND.ROU_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getPla1Id();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getPla2Id();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getRouId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPla1Id();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPla2Id();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getRouId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundRecord value1(Integer value) {
        setPla1Id(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundRecord value2(Integer value) {
        setPla2Id(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundRecord value3(Long value) {
        setRouId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundRecord values(Integer value1, Integer value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoundRecord
     */
    public RoundRecord() {
        super(Round.ROUND);
    }

    /**
     * Create a detached, initialised RoundRecord
     */
    public RoundRecord(Integer pla1Id, Integer pla2Id, Long rouId) {
        super(Round.ROUND);

        set(0, pla1Id);
        set(1, pla2Id);
        set(2, rouId);
    }
}
